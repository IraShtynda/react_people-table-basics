{"version":3,"sources":["utils/getLinkClass.ts","components/Navbar.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","utils/peopleWithParents.ts","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navbar","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PersonRow","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","PeoplePage","useState","setPeople","loading","setLoading","error","setError","useEffect","data","find","peopleWithParents","catch","finally","length","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4aa3db87.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getLinkClass } from '../utils/getLinkClass';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink className={getLinkClass} to=\"/\">Home</NavLink>\n        <NavLink className={getLinkClass} to=\"/people\">People</NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother ? (\n          <PersonLink person={person.mother} />\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {person.father ? (\n          <PersonLink person={person.father} />\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types/Person';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map((person) => (\n        <PersonRow key={person.slug} person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { peopleWithParents } from '../utils/peopleWithParents';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(peopleWithParents(data)))\n      .catch(() => setError(true))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading\n            ? <Loader />\n            : (\n              <>\n                {error && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {people.length === 0 && !error && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                {people.length > 0 && !error && (\n                  <PeopleTable people={people} />\n                )}\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const peopleWithParents = (people: Person[]): Person[] => {\n  return people.map(person => {\n    const mother = people.find(({ name }) => name === person.motherName);\n    const father = people.find(({ name }) => name === person.fatherName);\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { HomePage, PeoplePage, NotFoundPage } from './pages';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}